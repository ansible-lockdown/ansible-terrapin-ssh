---

## Defaults for running the terrapin-ssh playbook
test_ssh_server: true
test_ssh_client: true
# To actually apply remediation if issues found
# This will change ssh either by removing weak/bad ciphers or upgrading the packages
fix_the_terrapin: false

# To copy supplied Terrapin-Scanner to host
copy_scanner: false
get_scanner: true
# url
scanner_version: 'v1.1.0'
# Can override this in inventory or setup
scanner_platform: amd64
scanner_hash:
  v1.1.0:
    amd64: sha256:b4f326f0817e8c7abb7abfa121331ccfe7969c04fe80fded7c8e7a5283782b35
    arm: sha256:32cd233cb71f77893050ed23e44fc84af757eafb9fc25215bfd4b53591099419
    aarch64: sha256:05acfdaeb079280bedf31c1b87ea7f97f294f2c213d4edda9f4ac5a213c05312
    i386: sha256:8a2a04cd5c7d34f69b81f3871d844520100c1f181087f051223bf5d1a3e88d06

scanner_sum: "{{ scanner_hash[scanner_version][scanner_platform] }}"
scanner_url: "https://github.com/RUB-NDS/Terrapin-Scanner/releases/download/{{ scanner_version }}/Terrapin_Scanner_Linux_{{ scanner_platform }}"

# Run against remote server to test ssh server connections
# If false will add Terrapin-Scanner to system
terrapin_run_remote_scan: true
# Path with which to store the terrapin Binary on the host
terrapin_remote_path: '~/'

# If running from delegated localhost path to correct binary
terrapin_localhost_path: '~/go/bin/'

# Terrapin server scan command
terrapin_server_scan_command: "Terrapin-Scanner --json --connect"
terrapin_server_port: 22
el7_based_ciphers: aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr

# Terrapin Client tests
terrapin_client_test_port: 2222
terrapin_client_scan_command: "{{ terrapin_remote_path }}Terrapin-Scanner --json --listen localhost:{{ terrapin_client_test_port }}"
